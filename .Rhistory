#reproducing model output structure
myOutList<-vector("list", dayspan)
counter <- NULL
for (day in 1:dayspan){ # dayspan;Matteo starts from 2, I don't understand why
# day= 21
print(day)
counter <- append(counter,day)
p.life.a[1,,(4*de)] <- if(length(counter)==1) {
e.intro.n[day]
} else {
p.life.a[1,,(4*de)] + e.intro.n[day]
}
myOutList[[day]] <- p.life.a[1,,(4*de)]
} #end of day loop
myOutList
e.intro.n <-100
#---- Giovanni's smart solution ----
intro.eggs <- 100
pippo
#---- Giovanni's smart solution ----
intro.eggs <- 100
intro.eggs <- as.list(intro.eggs)
intro.eggs
names(intro.eggs) <- startd
intro.eggs
names(intro.eggs) <- as.Date(startd)
intro.eggs
intro.eggs
myDates <- seq.Date(from = as.Date(startd), to= as.Date(endd), by="day")
myDates
e.intro.n <- rep(0, length = length(myDates))
e.intro.n
count.mIntro <- which(seq.Date(from=as.Date(startd), to= as.Date(endd), by ="day") %in% as.Date(names(intro.eggs[[iteration]])))
e.intro.n[count.mIntro]<- as.numeric(intro.eggs[[iteration]])
e.intro.n
#---- Giovanni's smart solution ----
intro.eggs <- 100
intro.eggs <- as.list(intro.eggs)
intro.eggs
names(intro.eggs) <- as.Date(startd)
myDates <- seq.Date(from = as.Date(startd), to= as.Date(endd), by="day")
e.intro.n <- rep(0, length = length(myDates))
intro.eggs
myDates <- seq.Date(from = as.Date(startd), to= as.Date(endd), by="day")
e.intro.n <- rep(0, length = length(myDates))
e.intro.n
e.intro.n[1] <- intro.eggs
e.intro.n
intro.eggs
#---- Giovanni's smart solution ----
intro.eggs <- 100
myDates <- seq.Date(from = as.Date(startd), to= as.Date(endd), by="day")
e.intro.n <- rep(0, length = length(myDates))
e.intro.n[1] <- intro.eggs
e.intro.n
e.intro.n
iter <-2
rep(e.intro.n, iter)
e.intro.n
rep(as.list(e.intro.n), iter)
list(e.intro.n)
rep(list(e.intro.n), iter)
e.intro.n <- rep(0, length = length(myDates))
e.intro.n
lec
length(e.intro.n)
e.intro.n <- c(intro.eggs, rep(0, length = length(myDates)-1))
e.intro.n
as.integer(as.Date(endd) - as.Date(startd))
# model's internal objects
dayspan <- as.integer(as.Date(endd) - as.Date(startd)) +1# check anche nel codice sta cosa
dayspan
# model's internal objects
dayspan <- as.integer(as.Date(endd) - as.Date(startd)) # check anche nel codice sta cosa
endd
startd
myDates <- seq.Date(from = as.Date(startd), to= as.Date(endd), by="day")
myDates
endd
# model's internal objects
dayspan <- as.integer(as.Date(endd) - as.Date(startd)) # check anche nel codice sta cosa
dayspan
as.POSIXct(startd)
as.POSIXct(as.Date(startd)+dayspan)
doy <- as.numeric(format(seq(as.POSIXct(startd), as.POSIXct(as.Date(startd)+dayspan), by='day'), "%j"))
doy
length(doy)
dayspan
2:dayspan
length(2:dayspan)
# Set allocation of diapause/non-diapause eggs
counter <- 1
photo.matrix <- matrix(nrow=4, ncol=2, c(12, 13, 11, 12))
photo.matrix
photo.matrix <- matrix(nrow=2, ncol=2, c(12, 13, 11, 12))
photo.matrix
photo.matrix <- matrix(nrow=2, ncol=2, c(12, 12, 13, 13))
photo.matrix
day <-2
# Set allocation of diapause/non-diapause eggs
counter <- 2
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
}
e.diap.p
dl<-13
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
}
e.diap.p
# Set allocation of diapause/non-diapause eggs
counter <- 1:2
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
}
scale=="rg"
scale<-"rg"
species <- "albopictus"
photo.matrix <- matrix(nrow=2, ncol=2, c(12, 12, 13, 13))
day <-2
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
}
e.diap.p
photo.matrix
.e.dia_rate.f
.e.dia_rate.f()
photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
photo.matrix
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
}
e.diap.p
# Set allocation of diapause/non-diapause eggs
counter <- 1
scale<-"rg"
species <- "albopictus"
photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
}
e.diap.p
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
} else{0}
e.diap.p
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
} else{ ifelse(scale=="rg", rep(0, ncol(photo.matrix)), 0 ) }
e.diap.p
# Set allocation of diapause/non-diapause eggs
counter <- 1
scale<-"rg"
species <- "albopictus"
photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
photo.matrix
ncol(photo.matrix)
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
} else{ ifelse(scale=="rg", rep(0, ncol(photo.matrix)), 0 ) }
e.diap.p
counter
# Set allocation of diapause/non-diapause eggs
counter <- 1:2
scale<-"rg"
species <- "albopictus"
photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
day <-2
dl<-13
# Set allocation of diapause/non-diapause eggs
counter <- 1:2
scale<-"rg"
species <- "albopictus"
photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
day <-2
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
} else{ ifelse(scale=="rg", rep(0, ncol(photo.matrix)), 0 ) }
e.diap.p
# Set allocation of diapause/non-diapause eggs
counter <- 1
scale<-"rg"
species <- "albopictus"
photo.matrix <- matrix(nrow=2, ncol=2, c(12, 12, 13, 13))
day <-2
e.diap.p <- if(length(counter)!=1){
if(scale=="rg" & species!="aegypti") {
if( any(photo.matrix[,day-1] > photo.matrix[,day])){.e.dia_rate.f(photo.matrix[,day], species)} else {rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
.e.dia_rate.f(dl[day], species)
} else{0}
}
} else{ ifelse(scale=="rg", rep(0, ncol(photo.matrix)), 0 ) }
e.diap.p
# Set allocation of diapause/non-diapause eggs
counter <- 1:2
scale<-"rg"
species <- "albopictus"
photo.matrix <- matrix(nrow=2, ncol=2, c(12, 12, 13, 13))
day <-2
e.diap.p <- if(length(counter)!=1){
message("a")
if(scale=="rg" & species!="aegypti") {
message("b")
if( any(photo.matrix[,day-1] > photo.matrix[,day])){message("c"); .e.dia_rate.f(photo.matrix[,day], species)} else {message("d"); rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
message("f");
.e.dia_rate.f(dl[day], species)
} else{message("g"); 0}
}
} else{ message("h"); ifelse(scale=="rg", rep(0, ncol(photo.matrix)), 0 ) }
e.diap.p
photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
e.diap.p <- if(length(counter)!=1){
message("a")
if(scale=="rg" & species!="aegypti") {
message("b")
if( any(photo.matrix[,day-1] > photo.matrix[,day])){message("c"); .e.dia_rate.f(photo.matrix[,day], species)} else {message("d"); rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
message("f");
.e.dia_rate.f(dl[day], species)
} else{message("g"); 0}
}
} else{ message("h"); ifelse(scale=="rg", rep(0, ncol(photo.matrix)), 0 ) }
e.diap.p
# Set allocation of diapause/non-diapause eggs
counter <- 1
scale<-"rg"
species <- "albopictus"
photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
day <-2
e.diap.p <- if(length(counter)!=1){
message("a")
if(scale=="rg" & species!="aegypti") {
message("b")
if( any(photo.matrix[,day-1] > photo.matrix[,day])){message("c"); .e.dia_rate.f(photo.matrix[,day], species)} else {message("d"); rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
message("f");
.e.dia_rate.f(dl[day], species)
} else{message("g"); 0}
}
} else{ message("h"); ifelse(scale=="rg", rep(0, ncol(photo.matrix)), 0 ) }
e.diap.p
rep(0, ncol(photo.matrix))
e.diap.p <- if(length(counter)!=1){
message("a")
if(scale=="rg" & species!="aegypti") {
message("b")
if( any(photo.matrix[,day-1] > photo.matrix[,day])){message("c"); .e.dia_rate.f(photo.matrix[,day], species)} else {message("d"); rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
message("f");
.e.dia_rate.f(dl[day], species)
} else{message("g"); 0}
}
} else{ message("h");
if(scale=="rg"){rep(0, ncol(photo.matrix))}
else{0}
}
e.diap.p
# Set allocation of diapause/non-diapause eggs
counter <- 1:2
scale<-"rg"
species <- "albopictus"
photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
day <-2
e.diap.p <- if(length(counter)!=1){
message("a")
if(scale=="rg" & species!="aegypti") {
message("b")
if( any(photo.matrix[,day-1] > photo.matrix[,day])){message("c"); .e.dia_rate.f(photo.matrix[,day], species)} else {message("d"); rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
message("f");
.e.dia_rate.f(dl[day], species)
} else{message("g"); 0}
}
} else{ message("h");
if(scale=="rg"){rep(0, ncol(photo.matrix))}
else{0}
}
e.diap.p
# Set allocation of diapause/non-diapause eggs
counter <- 1:2
scale<-"rg"
species <- "albopictus"
photo.matrix <- matrix(nrow=1, ncol=2, c(13,  12))
day <-2
photo.matrix
# Set allocation of diapause/non-diapause eggs
counter <- 1
scale<-"rg"
species <- "albopictus"
# photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
day <-2
dl<-c(12, 13)
scale<-"ws"
species <- "albopictus"
# photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
day <-2
dl<-c(12, 13)
e.diap.p <- if(length(counter)!=1){
message("a")
if(scale=="rg" & species!="aegypti") {
message("b")
if( any(photo.matrix[,day-1] > photo.matrix[,day])){message("c"); .e.dia_rate.f(photo.matrix[,day], species)} else {message("d"); rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
message("f");
.e.dia_rate.f(dl[day], species)
} else{message("g"); 0}
}
} else{ message("h");
if(scale=="rg"){rep(0, ncol(photo.matrix))}
else{0}
}
e.diap.p
# Set allocation of diapause/non-diapause eggs
counter <- 1:2
scale<-"ws"
species <- "albopictus"
# photo.matrix <- matrix(nrow=2, ncol=2, c(13, 13, 12, 12))
day <-2
dl<-c(12, 13)
e.diap.p <- if(length(counter)!=1){
message("a")
if(scale=="rg" & species!="aegypti") {
message("b")
if( any(photo.matrix[,day-1] > photo.matrix[,day])){message("c"); .e.dia_rate.f(photo.matrix[,day], species)} else {message("d"); rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
message("f");
.e.dia_rate.f(dl[day], species)
} else{message("g"); 0}
}
} else{ message("h");
if(scale=="rg"){rep(0, ncol(photo.matrix))}
else{0}
}
e.diap.p
dl<-c(13, 12)
e.diap.p <- if(length(counter)!=1){
message("a")
if(scale=="rg" & species!="aegypti") {
message("b")
if( any(photo.matrix[,day-1] > photo.matrix[,day])){message("c"); .e.dia_rate.f(photo.matrix[,day], species)} else {message("d"); rep(0, ncol(photo.matrix))}
} else { if( dl[day-1]>dl[day] ) {
message("f");
.e.dia_rate.f(dl[day], species)
} else{message("g"); 0}
}
} else{ message("h");
if(scale=="rg"){rep(0, ncol(photo.matrix))}
else{0}
}
e.diap.p
# devtools::create("yourPkg")
# devtools::install_github("mattmar/dynamAedes")
devtools::load_all(".") # Working directory should be in the package directory
?check_date_format
??check_date_format
as.integer( as.Date(startd): as.Date(endd))
length(as.integer( as.Date(startd): as.Date(endd)))
as.Date(startd):as.Date(endd)
dayspan <- length(as.Date(startd):as.Date(endd))
dayspan
temps.matrix
dim(temps.matrix)
temps.matrix = matrix(data =NA, nrow=1, ncol =  length(as.Date(startd):as.Date(endd)))
ncol(temps.matrix)
dayspan
doy <- as.numeric(format(seq(as.POSIXct(startd), as.POSIXct(as.Date(startd)+dayspan), by='day'), "%j"))
doy
dayspan
dayspan
(dayspan-1)
doy <- as.numeric(format(seq(as.POSIXct(startd), as.POSIXct(as.Date(startd)+dayspan), by='day'), "%j"))
doy
dayspan
doy <- as.numeric(format(seq(as.POSIXct(startd), as.POSIXct(as.Date(endd)), length.out=dayspan, by='day'), "%j"))
doy <- as.numeric(format(seq(as.POSIXct(startd), as.POSIXct(as.Date(endd)), length.out=dayspan), "%j"))
doy
doy <- as.numeric(format(seq(as.POSIXct(startd), as.POSIXct(as.Date(startd)+dayspan), by='day'), "%j"))
doy
doy <- as.numeric(format(seq(as.POSIXct(startd), as.POSIXct(as.Date(startd)+dayspan), by='day'), "%j"))
doy
doy <- as.numeric(format(seq(as.POSIXct(startd), as.POSIXct(as.Date(endd)), length.out=dayspan), "%j"))
doy
# devtools::create("yourPkg")
# devtools::install_github("mattmar/dynamAedes")
devtools::load_all(".") # Working directory should be in the package directory
knitr::opts_chunk$set(fig.width=10, fig.height=10, fig.asp = 0.618, out.width = "95%", fig.align = "center", fig.dpi = 150, collapse = FALSE, comment = "#")
options(rmarkdown.html_vignette.check_title = FALSE)
#Load packages
# simulate temperatures
library(eesim)
# modelling
library(dynamAedes)
# data manipulation and plotting
library(ggplot2)
Sys.setlocale("LC_TIME", "en_GB.UTF-8")
ndays <- 365*1 #length of the time series in days
set.seed(123)
sim_temp <- create_sims(n_reps = 1,
n = ndays,
central = 16,
sd = 2,
exposure_type = "continuous",
exposure_trend = "cos1", exposure_amp = -1.0,
average_outcome = 12,
outcome_trend = "cos1",
outcome_amp = 0.8,
rr = 1.0055)
hist(sim_temp[[1]]$x,
xlab="Temperature (°C)",
main="Histogram of simulated temperatures")
plot(sim_temp[[1]]$date,
sim_temp[[1]]$x,
main="Simulated temperatures seasonal trend",
xlab="Date", ylab="Temperature (°C)"
)
## Define the day of introduction (July 1st is day 1)
str <- "2000-07-01"
## Define the end-day of life cycle (August 1st is the last day)
endr <- "2000-08-01"
## Define the number of eggs to be introduced
ie <- 1000
## Define the number of model iterations
it <- 1 # The higher the number of simulations the better
## Define the number of liters for the larval density-dependent mortality
habitat_liters <- 1
#Define latitude and longitude for the diapause process
myLat <- 42
myLon <- 7
## Define the number of parallel processes (for sequential iterations set nc=1)
cl <- 1
df_temp <- data.frame("Date" = sim_temp[[1]]$date, "temp" = sim_temp[[1]]$x)
w <- t(as.integer(df_temp$temp*1000)[format(as.Date(str)+1,"%j"):format(as.Date(endr)+1,"%j")])
simout <- dynamAedes.m(species="albopictus",
scale="ws",
jhwv=habitat_liters,
temps.matrix=w,
startd=str,
endd=endr,
n.clusters=cl,
iter=it,
intro.eggs=ie,
compressed.output=TRUE,
lat=myLat,
long=myLon,
verbose=FALSE,
seeding=TRUE)
summary(simout)
length( seq.Date(from = as.Date(str), to= as.Date(endr), by="day"))
#---- dynamAedes ----
setwd("/home/daniele/GitHub/dynamAedes/")
# token "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"
library(devtools)
library(roxygen2)
library(usethat)
# devtools::create("yourPkg")
# devtools::install_github("mattmar/dynamAedes")
devtools::load_all(".") # Working directory should be in the package directory
# Compute vector of dates for eggs introductions
myDates <- seq.Date(from = as.Date(startd), to = as.Date(endd), by="day")
myDates
