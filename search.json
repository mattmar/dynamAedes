[{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"local-scale-model","dir":"Articles","previous_headings":"","what":"Local scale model","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"“local scale” means model accounts active passive dispersal mosquitoes. setting, model requires three input datasets: numerical temperature matrix (degree Celsius) defined space time (space rows, time columns); two-column numerical matrix reporting coordinates (meters) space-unit (cell); numerical distance matrix reports distance meters cells connected road network. purpose tutorial, use following simulated datasets: 5 km lattice grid 250 m cell size; 1-year long spatially temporally correlated temperature time series; matrix distances cells connected simulated road network;","code":""},{"path":[]},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"create-lattice-arena","dir":"Articles","previous_headings":"Local scale model > Input data","what":"Create lattice arena","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"First, define physical space introduction mosquitoes happen. define squared lattice arena 5 km side 250 m resolution (20 columns 20 rows, 400 total cells). add spatial pattern lattice area. spatial pattern used later add spatial correllation (SAC) temperature time series. spatial autocorrelated pattern obtained using semivariogram model defined sill (value semivarion attains range) range (distance 0 spatial correlation) predicting semivariogram model lattice grid using unconditional Gaussian simulation. generate spatially autocorrelated raster adding SA variable (xyz$sim1) RasterLayer object. autocorrelated surface example represent distribution vegetation cover urban landscape.","code":"gridDim <- 20 # 5000m/250 m = 20 columns and rows xy <- expand.grid(x=1:gridDim, y=1:gridDim) varioMod <- vgm(psill=0.005, range=100, model='Exp') # psill = partial sill = (sill-nugget) # Set up an additional variable from simple kriging zDummy <- gstat(formula=z~1,                  locations = ~x+y,                  dummy=TRUE,                 beta=1,                  model=varioMod,                  nmax=1) # Generate a randomly autocorrelated predictor data field set.seed(123) xyz <- predict(zDummy, newdata=xy, nsim=1) # [using unconditional Gaussian simulation] utm32N <- \"+proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\"  r <- raster(nrow=gridDim, ncol=gridDim, crs=utm32N, ext=extent(1220000,1225000, 5700000,5705000))  values(r)=xyz$sim1 plot(r, main=\"SAC landscape\") df <- data.frame(\"id\"=1:nrow(xyz), coordinates(r)) bbox <- as(extent(r), \"SpatialPolygons\") projection(bbox) <- projection(utm32N)  # Store Parameters for autocorrelation autocorr_factor <- values(r)"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"simulate-temperature-data-with-seasonal-trend","dir":"Articles","previous_headings":"Local scale model > Input data","what":"Simulate temperature data with seasonal trend","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"simulate 1-year temperature time series seasonal trend. time series consider mean value 16°C standard deviation 2°C. visualisation distribution temperature values temporal trend.   can “expand onto space” temperature time series multiplying autocorrelated surface simulated . comparison distribution initial temperature time series autocorrelated temperature surface","code":"ndays = 365*1 #length of the time series in days set.seed(123) sim_temp <- create_sims(n_reps = 1,                          n = ndays,                          central = 16,                          sd = 2,                          exposure_type = \"continuous\",                          exposure_trend = \"cos1\", exposure_amp = -1.0,                          average_outcome = 12,                         outcome_trend = \"cos1\",                         outcome_amp = 0.8,                          rr = 1.0055) hist(sim_temp[[1]]$x,       xlab=\"Temperature (°C)\",       main=\"Histogram of simulated temperatures\") plot(sim_temp[[1]]$date,      sim_temp[[1]]$x,      main=\"Simulated temperatures seasonal trend\",       xlab=\"Date\", ylab=\"Temperature (°C)\"      ) mat <-do.call(rbind, lapply(1:ncell(r), function(x) {     d_t <- sim_temp[[1]]$x*autocorr_factor[[x]]     return(d_t) })) par(mfrow=c(2,1)) hist(mat, xlab=\"Temperature (°C)\", main=\"Histogram of simulated spatial autocorreled temperature\") hist(sim_temp[[1]]$x, xlab=\"Temperature (°C)\", main=\"Histogram of simulated temperatures\", col=\"red\") par(mfrow=c(1,1))  # Format temperature data names(mat) <- paste0(\"d_\", 1:ndays) df_temp <- cbind(df, mat)"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"simulate-an-arbitrary-road-segment-for-medium-range-dispersal","dir":"Articles","previous_headings":"Local scale model","what":"Simulate an arbitrary road segment for medium-range dispersal","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"model considered possibility medium-range passive dispersal. Thus, simulate arbitrary road segment along adult mosquitoes can disperse passively (.e., car traffic).  defining road segment add “buffer” 0.05° m around road segment. Adult mosquitoes reach develop cells comprised 0.05° buffer around roads thus able undergo passive dispersal.  Next, derive distance matrix cells comprised spatial buffer along road network. First, select cells.  , compute Euclidean distance (meters) selected cell.","code":"set.seed(123) pts <- spsample(bbox, 5, type=\"random\") # Warning in proj4string(obj): CRS object has comment, which is lost in output; in tests, see # https://cran.r-project.org/web/packages/sp/vignettes/CRS_warnings.html roads <- spLines(pts)  # Check simulated segment raster::plot(r) raster::plot(roads, add=T) buff <- buffer(roads, width=250) crs(buff) <- crs(r) # Check grid, road segment and buffer raster::plot(r) raster::plot(buff, add=T) raster::plot(roads, add=T, col=\"red\") df_sp <- df coordinates(df_sp)=~x+y df_sp <- raster::intersect(df_sp,buff)  # Check selected cells raster::plot(r) raster::plot(buff, add=T) raster::plot(df_sp, add=T, col=\"red\") dist_matrix <- as.matrix(dist(coordinates(df_sp)))"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"model-settings","dir":"Articles","previous_headings":"Local scale model","what":"Model settings","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"Define two-column matrix coordinates identify cell lattice grid. model requirement, distance matrix must column names equal row names. Moreover, distances distance matrix must rounded thousands.  Select cell intersect roads introduction:  now left model variables need defined. Finally, let’s prepare temperature matrix. Float numbers temperature matrix slow computational speed, thus first multiply 1000 transform integer numbers.","code":"cc <- df_temp[,c(\"x\",\"y\")] colnames(dist_matrix) <- row.names(dist_matrix) dist_matrix <- apply(dist_matrix,2,function(x) round(x/1000,1)*1000)   # An histogram showing the distribution of distances of cells along the road network hist(dist_matrix, xlab=\"Distance (meters)\") set.seed(123) icellcoords <- df[sample(row.names(dist_matrix),1),c(2:3)] set.seed(123) icellid <- df[sample(row.names(dist_matrix),1),1]  raster::plot(r) raster::plot(buff, add=T) raster::plot(df_sp, add=T, col=\"red\") raster::plot(SpatialPoints(icellcoords), add=T, col=\"blue\", pch=21) raster::plot(SpatialPoints(coords=matrix(coordinates(r)[icellid,],ncol=2)), add=T, col=\"black\", pch=21) ## Define cells along roads into which introduce propagules on day 1 intro.vector <- icellid ## Define the day of introduction (June 1st is day 1) str = \"2000-06-01\" ## Define the end-day of life cycle (August 1st is the last day) endr = \"2000-08-01\" ## Define the number of adult females to be introduced ia = 5000 ## Define the number of model iterations it = 1 # The higher the number of simulations the better ## Define the number of liters for the larval density-dependent mortality habitat_liters=100 ##Define average trip distance mypDist=1000 ## Define the number of parallel processes (for sequential iterations set nc=1) cl = 1 w <- sapply(df_temp[,as.POSIXlt(str)$yday:as.POSIXlt(endr)$yday], function(x) as.integer(x*1000))"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"run-the-model","dir":"Articles","previous_headings":"Local scale model > Model settings","what":"Run the model","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"Running model settings specified example takes 3 minutes.","code":"simout=dynamAedes(species=\"albopictus\",             scale=\"lc\",               ihwv=habitat_liters,             temps.matrix=w,             cells.coords=cc,             lat=50.80,             long=4.44,             road.dist.matrix=dist_matrix,             avgpdisp=mypDist,             intro.cells=intro.vector,             startd=str,             endd=endr,             n.clusters=cl,              iter=it,             intro.adults=ia,               compressed.output=TRUE,              cellsize=250,             maxadisp=mypDist,             dispbins=10,             seeding=TRUE,             verbose=TRUE             )"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"analyse-the-results","dir":"Articles","previous_headings":"Local scale model","what":"Analyse the results","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"first explore model output structure: simout object nested list. first level corresponds number model iterations second level corresponds simulated days. inspect first iteration, observe model computed 123 days, specified object endr. third level corresponds amount individuals stage (rows) within grid cell landscape (columns). inspect first day within first iteration, obtain matrix : can now use auxiliary functions model Analyse results.","code":"print(it) # [1] 1 print(length(simout)) # [1] 1 length(simout[[1]]) # [1] 60 dim(simout[[1]][[1]]) # [1]   4 400"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"derive-probability-of-a-successfull-introduction-at-the-end-of-the-simulated-period","dir":"Articles","previous_headings":"Local scale model > Analyse the results","what":"Derive probability of a successfull introduction at the end of the simulated period","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"First, can retrieve probability successful introduction, computed proportion model iterations resulted viable mosquito population given date. can also get spatial output, using function psi_sp, require additional input matrix centroid coordinates pixels. local scale, interpretation output nuanced scales: pixel psi=0 can pixel simulations resulted extinction species yet arrived dispersal.","code":"psi(input_sim = simout, eval_date = 60) #   Days_after_intro p_success      stage # 1           Day 60         1 Population plot(psi_sp(coords = cc, input_sim = simout, eval_date = 30, n.clusters=cl)) raster::plot(buff, add=T) raster::plot(df_sp, add=T, col=\"red\") raster::plot(SpatialPoints(icellcoords), add=T, col=\"blue\", pch=21)"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"derive-abundance-95-ci-for-each-life-stage-and-in-each-day","dir":"Articles","previous_headings":"Local scale model > Analyse the results","what":"Derive abundance 95% CI for each life stage and in each day","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"can now compute interquantile range abundance simulated population whole landscape using function adci.  can also spatial output quantiles abundance distribution given life stage given simulated day using function adci_sp specifiying pixel coordinates. example eggs: Note small number mosquitoes present pixel many iterations, quantiles may 0 (especially low quantiles) may see series empty rasters!","code":"dd <- max(sapply(simout, function(x) length(x)))#retrieve the maximum number of simulated days egg <- as.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=1)) juv <- as.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=2)) ad <- as.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=3)) eggd <- as.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=4))  # Date to Julian date strj <- as.numeric(format(as.Date(str),\"%j\")) endrj <- as.numeric(format(as.Date(endr),\"%j\"))-2  egg$myStage='Egg' egg$Date=seq.Date(sim_temp[[1]]$date[strj], sim_temp[[1]]$date[endrj], by='day') juv$myStage='Juvenile' juv$Date=seq.Date(sim_temp[[1]]$date[strj], sim_temp[[1]]$date[endrj], by='day') ad$myStage='Adult' ad$Date=seq.Date(sim_temp[[1]]$date[strj], sim_temp[[1]]$date[endrj], by='day') eggd$myStage='Diapausing egg' eggd$Date=seq.Date(sim_temp[[1]]$date[strj], sim_temp[[1]]$date[endrj], by='day')  outdf=bind_rows(egg, juv, ad, eggd) %>%    as_tibble()  outdf %>%    mutate(myStage=factor(myStage, levels= c('Egg', 'Diapausing egg', 'Juvenile', 'Adult'))) %>%    ggplot( aes(y=`50%`,x=Date, group=factor(myStage),col=factor(myStage))) +   ggtitle(\"Ae. albopictus Interquantile range abundance\")+   geom_line(size=1.2)+   geom_ribbon(aes(ymin=`25%`,ymax=`75%`,fill=factor(myStage)),               col=\"white\",               alpha=0.2,               outline.type=\"full\")+   labs(x=\"Date\", y=\"Interquantile range abundance (Log10)\", col=\"Stage\", fill=\"Stage\")+   facet_wrap(~myStage, scales = \"free\")+   theme_light()+   theme(legend.pos=\"bottom\",  text = element_text(size=14) , strip.text = element_text(face = \"italic\")) r=adci_sp(simout, coords=cc, eval_date=30, breaks=c(0.025,0.975), stage=3) plot(r)"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"number-of-invaded-cells","dir":"Articles","previous_headings":"Local scale model > Analyse the results","what":"Number of invaded cells","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"Compute summary number invaded cells model iterations","code":"x=icci(simout, eval_date=1:30, breaks=c(0.25,0.50,0.75)) head(x) #    25% 50% 75% day # V1   2   2   2   1 # V2   2   2   2   2 # V3   4   4   4   3 # V4   4   4   4   4 # V5   3   3   3   5 # V6   4   4   4   6 tail(x) #     25% 50% 75% day # V25   8   8   8  25 # V26  10  10  10  26 # V27  10  10  10  27 # V28  10  10  10  28 # V29   9   9   9  29 # V30  10  10  10  30"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_local.html","id":"estimates-of-mosquito-dispersal-spread-in-km2","dir":"Articles","previous_headings":"Local scale model > Analyse the results","what":"Estimates of mosquito dispersal spread (in km2 )","title":"Describing the main features of *dynamAedes*: the local scale model.","text":"Derive estimates mosquito dispersal (km^2) simulated mosquito populations (scale = “lc”) simulated day (case 50 days start end simulate period).","code":"x=dici(simout, coords=cc, eval_date=seq(1,30,length.out=30), breaks=c(0.25,0.50,0.75), space=FALSE) plot(`75%`~day,x,type=\"l\",ylab=\"Population dispersal (in meters) from cell of introduction\",xlab=\"days from introduction\") lines(`50%`~day,x,type=\"l\", col=\"red\") lines(`25%`~day,x,type=\"l\")"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_punctual.html","id":"punctual-scale-model","dir":"Articles","previous_headings":"","what":"Punctual scale model","title":"Describing the main features of *dynamAedes*: the punctual scale model.","text":"punctual scale, model requires weather station temperature time series provided numerical matrix (degree Celsius). purpose tutorial, simulate 1-year long temperature time series.","code":""},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_punctual.html","id":"simulate-temperature-data-with-seasonal-trend","dir":"Articles","previous_headings":"Punctual scale model","what":"Simulate temperature data with seasonal trend","title":"Describing the main features of *dynamAedes*: the punctual scale model.","text":"first simulate 1-year temperature time series seasonal trend. time series consider mean value 16°C standard deviation 2°C. visualisation distribution temperature values temporal trend.","code":"ndays = 365*1 #length of the time series in days set.seed(123) sim_temp <- create_sims(n_reps = 1,                          n = ndays,                          central = 16,                          sd = 2,                          exposure_type = \"continuous\",                          exposure_trend = \"cos1\", exposure_amp = -1.0,                          average_outcome = 12,                         outcome_trend = \"cos1\",                         outcome_amp = 0.8,                          rr = 1.0055) hist(sim_temp[[1]]$x,       xlab=\"Temperature (°C)\",       main=\"Histogram of simulated temperatures\") plot(sim_temp[[1]]$date,      sim_temp[[1]]$x,      main=\"Simulated temperatures seasonal trend\",       xlab=\"Date\", ylab=\"Temperature (°C)\"      )"},{"path":[]},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_punctual.html","id":"model-settings","dir":"Articles","previous_headings":"Punctual scale model > Format the simulated input datasets and run the model","what":"Model settings","title":"Describing the main features of *dynamAedes*: the punctual scale model.","text":"Float numbers temperature matrix slow computational speed, must multiplied 1000 transformed integer numbers. also transpose matrix long wide format, since conceptualized model structure considering rows spatial component (e.g., observations; = 1) columns temporal one (e.g., variables). now left model parameters need defined user.","code":"## Define the day of introduction (July 1st is day 1) str = \"2000-07-01\" ## Define the end-day of life cycle (August 1st is the last day) endr = \"2000-08-01\" ## Define the number of eggs to be introduced ie = 1000 ## Define the number of model iterations it = 1 # The higher the number of simulations the better ## Define the number of liters for the larval density-dependent mortality habitat_liters=1 #Define latitude and longitude for the diapause process myLat=42 myLon=7 ## Define the number of parallel processes (for sequential itarations set nc=1) cl = 1 ## Set output name for the *.RDS output will be saved #outname= paste0(\"dynamAedes_albo_ws_dayintro_\",str,\"_end\",endr,\"_niters\",it,\"_neggs\",ie) df_temp <- data.frame(\"Date\" = sim_temp[[1]]$date, \"temp\" = sim_temp[[1]]$x) w <- t(as.integer(df_temp$temp*1000)[format(as.Date(str)+1,\"%j\"):format(as.Date(endr)+1,\"%j\")])"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_punctual.html","id":"run-the-model","dir":"Articles","previous_headings":"Punctual scale model > Format the simulated input datasets and run the model","what":"Run the model","title":"Describing the main features of *dynamAedes*: the punctual scale model.","text":"Running model settings specified example takes 2 minutes.","code":"simout <- dynamAedes(species=\"albopictus\",                       scale=\"ws\",                        ihwv=habitat_liters,                        temps.matrix=w,                        startd=str,                       endd=endr,                        n.clusters=cl,                       iter=it,                        intro.eggs=ie,                        compressed.output=TRUE,                       lat=myLat,                       long=myLon,                      verbose=FALSE,                      seeding=TRUE) #    |                                                                               |                                                                      |   0%"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_punctual.html","id":"analyse-the-results","dir":"Articles","previous_headings":"Punctual scale model","what":"Analyse the results","title":"Describing the main features of *dynamAedes*: the punctual scale model.","text":"first explore model output structure: simout object nested list. first level corresponds number model iterations second level corresponds simulated days. inspect first iteration, observe model computed rlength(simout[[1]]) days, since started simulation 1st July ended 1st August. third level corresponds amount individuals stage (rows). inspect 1st 15th day within first iteration, obtain matrix can now use auxiliary functions package analyse results.","code":"print(it) # [1] 1 print(length(simout)) # [1] 1 length(simout[[1]]) # [1] 30 dim(simout[[1]][[1]]) # [1] 4 1 simout[[1]][[1]] #              [,1] # egg           645 # juvenile      355 # adult           0 # diapause_egg    0 simout[[1]][[15]] #              [,1] # egg           128 # juvenile      108 # adult           8 # diapause_egg    0"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_punctual.html","id":"derive-probability-of-a-successfull-introduction-at-the-end-of-the-simulated-period","dir":"Articles","previous_headings":"Punctual scale model > Analyse the results","what":"Derive probability of a successfull introduction at the end of the simulated period","title":"Describing the main features of *dynamAedes*: the punctual scale model.","text":"First, can retrieve “probability successful introduction”, computed proportion model iterations resulted viable mosquito population given date. case results 1, since one iteration population still viable end simulation.","code":"psi(input_sim = simout, eval_date = 30) #   Days_after_intro p_success      stage # 1           Day 30         1 Population"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_punctual.html","id":"derive-abundance-95-ci-for-each-life-stage-and-in-each-day","dir":"Articles","previous_headings":"Punctual scale model > Analyse the results","what":"Derive abundance 95% CI for each life stage and in each day","title":"Describing the main features of *dynamAedes*: the punctual scale model.","text":"now compute interquantile range abundance stages simulated population using function adci.","code":"# Retrieve the maximum number of simulated days dd <- max(sapply(simout, function(x) length(x)))  # Compute the abundance outdf <- rbind(data.frame(cbind(                     data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=1)),                      myStage = 'Egg')),                data.frame(cbind(                     adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=2),                      myStage='Juvenile')),                data.frame(cbind(                     adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=3),                      myStage='Adult')),                data.frame(cbind(                     adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=4),                      myStage='Diapausing egg'))                )  # Plot outdf %>%    mutate(myStage=factor(myStage, levels= c('Egg', 'Diapausing egg', 'Juvenile', 'Adult')),           X25.=as.numeric(X25.),           X50.=as.numeric(X50.),          X75.=as.numeric(X75.),           Date=rep(seq.Date(as.Date(str), as.Date(endr)-2, by=\"day\"),4)) %>%  ggplot( aes(x=Date, y=X50., group=factor(myStage),col=factor(myStage))) +   ggtitle(\"Ae. albopictus Interquantile range abundance\")+   geom_line(size=0.8)+   geom_ribbon(aes(ymin=X25.,ymax=X75.,fill=factor(myStage)),               col=\"white\",               alpha=0.2,               outline.type=\"full\")+   labs(x=\"Date\", y=\"Interquantile range abundance\", col=\"Stage\", fill=\"Stage\")+   facet_wrap(~myStage, scales = \"free_y\")+   theme_light()+   theme(legend.pos=\"bottom\",           text = element_text(size=16) ,          strip.text = element_text(face = \"italic\"))"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_regional.html","id":"regional-scale-model","dir":"Articles","previous_headings":"","what":"Regional scale model","title":"Describing the main features of *dynamAedes*: the regional scale model.","text":"model regional scale running model “punctual” scale cell grid without accounting active passive dispersal. cell therefore close unit mosquito population. setting, model requires two input datasets: numerical temperature matrix (degree Celsius) defined space time (space rows, time columns); two-column numerical matrix reporting centroid coordinates (meters) cell. purpose tutorial, use following simulated datasets: 5 km lattice grid 250 m cell size; 1-year long spatially temporally correlated temperature time series;","code":""},{"path":[]},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_regional.html","id":"create-lattice-arena","dir":"Articles","previous_headings":"Regional scale model > Prepare input data","what":"Create lattice arena","title":"Describing the main features of *dynamAedes*: the regional scale model.","text":"First, define physical space introduction mosquitoes happen. define squared lattice arena 5 km side 250 m resolution (20 colums 20 rows, 400 total cells). add spatial pattern lattice area. spatial pattern used later add spatial correllation (SAC) temperature time series. spatial autocorrelated pattern obtained using semivariogram model defined sill (value semivarion attains range) range (distance 0 spatial correlation) predicting semivariogram model lattice grid using unconditional Gaussian simulation. generate spatially autocorrelated raster adding SA variable (xyz$sim1) RasterLayer object. autocorrelated surface example represent distribution vegetation cover urban landscape.","code":"gridDim <- 20 # 5000m/250 m = 20 columns and rows xy <- expand.grid(x=1:gridDim, y=1:gridDim) varioMod <- vgm(psill=0.5, range=100, model='Exp') # psill = partial sill = (sill-nugget) # Set up an additional variable from simple kriging zDummy <- gstat(formula=z~1,                  locations = ~x+y,                  dummy=TRUE,                 beta=1,                  model=varioMod,                  nmax=1) # Generate a randomly autocorrelated predictor data field set.seed(123) xyz <- predict(zDummy, newdata=xy, nsim=1) # [using unconditional Gaussian simulation] utm32N <- \"+proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\" r <- raster(nrow=gridDim, ncol=gridDim, crs=utm32N, ext=extent(1220000,1225000, 5700000,5705000))  values(r)=xyz$sim1 plot(r) df <- data.frame(\"id\"=1:nrow(xyz), coordinates(r)) bbox <- as(extent(r), \"SpatialPolygons\")  # Store Parameters for autocorrelation autocorr_factor <- values(r)"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_regional.html","id":"simulate-temperature-data-with-seasonal-trend","dir":"Articles","previous_headings":"Regional scale model > Prepare input data","what":"Simulate temperature data with seasonal trend","title":"Describing the main features of *dynamAedes*: the regional scale model.","text":"first simulate 1-year temperature time series seasonal trend. time series consider mean value 16°C standard deviation 2°C. visualisation distribution temperature values temporal trend.   can “expand onto space” temperature time series multiplying autocorrelated surface simulated . comparison distribution initial temperature time series autocorrelated temperature surface","code":"ndays = 365*1 #length of the time series in days set.seed(123) sim_temp <- create_sims(n_reps = 1,                          n = ndays,                          central = 16,                          sd = 2,                          exposure_type = \"continuous\",                          exposure_trend = \"cos1\", exposure_amp = -1.0,                          average_outcome = 12,                         outcome_trend = \"cos1\",                         outcome_amp = 0.8,                          rr = 1.0055) hist(sim_temp[[1]]$x,       xlab=\"Temperature (°C)\",       main=\"Histogram of simulated temperatures\") plot(sim_temp[[1]]$date,      sim_temp[[1]]$x,      main=\"Simulated temperatures seasonal trend\",       xlab=\"Date\", ylab=\"Temperature (°C)\"      ) mat <- lapply(1:ncell(r), function(x) {     d_t <- sim_temp[[1]]$x*autocorr_factor[[x]]     return(d_t) })  mat <- do.call(rbind,mat) par(mfrow=c(2,1)) hist(mat, xlab=\"Temperature (°C)\", main=\"Histogram of simulated spatial autocorreled temperatures\") hist(sim_temp[[1]]$x, xlab=\"Temperature (°C)\", main=\"Histogram of simulated temperatures\", col=\"red\") par(mfrow=c(1,1))  # Format temperature data names(mat) <- paste0(\"d_\", 1:ndays) df_temp <- cbind(df, mat)"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_regional.html","id":"model-settings","dir":"Articles","previous_headings":"Regional scale model","what":"Model settings","title":"Describing the main features of *dynamAedes*: the regional scale model.","text":"Float numbers temperature matrix slow computational speed, thus first multiply 1000 transform integer numbers. w subset match simulated time period . can now define two-column matrix coordinates identify cell lattice grid. now left model variables need defined.","code":"w <- sapply(df_temp[,-c(1:3)], function(x) as.integer(x*1000)) cc <- df_temp[,c(\"x\",\"y\")] ## Define the day of introduction (May 1st is day 1) str = \"2000-06-01\" ## Define the end-day of life cycle (July 2nd is the last day) endr = \"2000-07-02\" ## Define the number of eggs to be introduced ie = 100 ## Define the number of model iterations it = 1 # The higher the number of simulations the better ## Define the number of liters for the larval density-dependent mortality habitat_liters=1 ## Define proj4 string for input coordinates utm32N = \"+proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\"  ## Define the number of parallel processes (for sequential iterations set nc=1) cl = 1"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_regional.html","id":"run-the-model","dir":"Articles","previous_headings":"Regional scale model > Model settings","what":"Run the model","title":"Describing the main features of *dynamAedes*: the regional scale model.","text":"Running model settings specified example takes 3 minutes.","code":"simout=dynamAedes(species=\"albopictus\",              scale=\"rg\",               ihwv=habitat_liters,               temps.matrix=w[,as.numeric(format(as.Date(str),\"%j\")):as.numeric(format(as.Date(endr),\"%j\"))],             coords.proj4=utm32N,              cells.coords=cc,             startd=str,              endd=endr,               n.clusters=cl,              iter=it,               intro.eggs=ie,               compressed.output=TRUE,             seeding=TRUE,             verbose=FALSE)"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_regional.html","id":"analyse-the-results","dir":"Articles","previous_headings":"Regional scale model","what":"Analyse the results","title":"Describing the main features of *dynamAedes*: the regional scale model.","text":"first explore model output structure: simout object nested list. first level corresponds number model iterations second level corresponds simulated days. inspect first iteration, observe model computed rlength(simout[[1]]) days, since started simulation 1st July ended 1st August. third level output list object corresponds amount individuals stage (rows) within grid cell landscape (columns). inspect first day within first iteration, obtain matrix can now use auxiliary functions package Analyse results.","code":"print(it) # [1] 1 print(length(simout)) # [1] 1 length(simout[[1]]) # [1] 30 dim(simout[[1]][[1]]) # [1]   4 400"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_regional.html","id":"derive-probability-of-a-successfull-introduction-at-the-end-of-the-simulated-period","dir":"Articles","previous_headings":"Regional scale model > Analyse the results","what":"Derive probability of a successfull introduction at the end of the simulated period","title":"Describing the main features of *dynamAedes*: the regional scale model.","text":"First, can retrieve “probability successful introduction”, computed proportion model iterations resulted viable mosquito population (cells grid) given date. can also get “spatial output”, using function psi_sp, requires additional input matrix pixels coordinates","code":"psi(input_sim = simout, eval_date = 30) #   Days_after_intro p_success      stage # 1           Day 30         1 Population plot(psi_sp(coords = cc, input_sim = simout, eval_date = 30, n.clusters=cl))"},{"path":"https://mattmar.github.io/dynamAedes/articles/dynamAedes_regional.html","id":"derive-abundance-95-ci-for-each-life-stage-and-in-each-day","dir":"Articles","previous_headings":"Regional scale model > Analyse the results","what":"Derive abundance 95% CI for each life stage and in each day","title":"Describing the main features of *dynamAedes*: the regional scale model.","text":"can now compute interquantile range abundance simulated population using function adci whole landscape.","code":"dd <- max(sapply(simout, function(x) length(x)))#retrieve the maximum number of simulated days egg <- as.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=1)) juv <- as.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=2)) ad <- as.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=3)) eggd <- as.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=4))  egg$myStage='Egg' juv$myStage='Juvenile' ad$myStage='Adult' eggd$myStage='Diapausing egg'  outdf=bind_rows(egg, juv, ad, eggd) %>%    as_tibble()  outdf$Date=rep(seq.Date(as.Date(str),as.Date(str)+dd-1, by=\"day\"),4)  outdf %>%    mutate(myStage=factor(myStage, levels= c('Egg', 'Diapausing egg', 'Juvenile', 'Adult'))) %>%    ggplot( aes(y=(`50%`),x=Date, group=factor(myStage),col=factor(myStage))) +   ggtitle(\"Ae. albopictus Interquantile range abundance\")+   geom_line(size=1.2)+   geom_ribbon(aes(ymin=`25%`,ymax=(`75%`),fill=factor(myStage)),               col=\"white\",               alpha=0.2,               outline.type=\"full\")+   labs(x=\"Date\", y=\"Interquantile range abundance\", col=\"Stage\", fill=\"Stage\")+   facet_wrap(~myStage, scales = \"free\")+   theme_light()+   theme(legend.pos=\"bottom\",  text = element_text(size=14) , strip.text = element_text(face = \"italic\"))"},{"path":"https://mattmar.github.io/dynamAedes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matteo Marcantonio. Author, maintainer. Daniele Da Re. Author.","code":""},{"path":"https://mattmar.github.io/dynamAedes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Da Re D, Montecino D, Vanwambeke S, Marcantonio M (2021). “yellow fever mosquito colonise Europe? Assessing re-introduction *Aedes aegypti* using process-based population dynamical model.” Ecological Informatics. doi:10.1016/j.ecoinf.2020.101180, https://www.sciencedirect.com/science/article/abs/pii/S1574954120301308?via%3Dihub. Da Re D, Bortel W, Vanwambeke S, Marcantonio M (2021). “dynamAedes: unified modelling framework invasive *Aedes* mosquitoes.” Ecological Informatics. doi:10.1101/2021.12.21.473628, https://www.biorxiv.org/content/10.1101/2021.12.21.473628v1.","code":"@Article{,   title = {Will the yellow fever mosquito colonise Europe? Assessing the re-introduction of *Aedes aegypti* using a process-based population dynamical model},   author = {Daniele {Da Re} and Diego Montecino and Sophie Vanwambeke and Matteo Marcantonio},   year = {2021},   journal = {Ecological Informatics},   url = {https://www.sciencedirect.com/science/article/abs/pii/S1574954120301308?via%3Dihub},   doi = {10.1016/j.ecoinf.2020.101180}, } @Article{,   title = {dynamAedes: a unified modelling framework for invasive *Aedes* mosquitoes},   author = {Daniele {Da Re} and Wim Van Bortel and Sophie Vanwambeke and Matteo Marcantonio},   year = {2021},   journal = {Ecological Informatics},   url = {https://www.biorxiv.org/content/10.1101/2021.12.21.473628v1},   doi = {10.1101/2021.12.21.473628}, }"},{"path":[]},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"model-settings","dir":"","previous_headings":"Format the simulated input datasets and run the model","what":"Model settings","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"Float numbers temperature matrix slow computational speed, thus first multiply 1000 transform integer numbers. also transpose matrix long wide format, conceptualize module structure considering rows spatial component (= 1) columns temporal one. now left model parameters need defined.","code":"df_temp=data.frame(\"Date\" = sim_temp[[1]]$date, \"temp\" = sim_temp[[1]]$x) w <- t(as.integer(df_temp$temp*1000)) ## Define the day of introduction (day 1) str = 121 ## Define the end-day of life cycle endr = 121+365 ## Define the number of eggs to be introduced ie = 500 ## Define the number of model iterations it = 10 # The higher the number of simulation the better ## Define the number of liters for the larval density-dependent mortality habitat_liters=1 #Define latitude and longitude for the diapause process myLat=42 myLon=7 ## Define the number of parallel processes (for sequential itarations set nc=1) cl = 5 ## Set output name for the *.RDS output will be saved outname= paste0(\"dynamAedes_albo_ws_dayintro_\",str,\"_end\",endr,\"_niters\",it,\"_neggs\",ie)"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"run-the-model","dir":"","previous_headings":"Format the simulated input datasets and run the model","what":"Run the model","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"Running model takes around 10 minutes settings specified example. {r, eval=FALSE, echo=TRUE} simout=dynamAedes(species=\"albopictus\",                       scale=\"ws\",                        ihwv=habitat_liters,                        temps.matrix=w,                        startd=str,                       endd=endr,                        n.clusters=cl,                       iter=,                        intro.eggs=ie,                        compressed.output=TRUE,                       lat=myLat,                       long=myLon,                       suffix=outname,                       verbose = FALSE) ## Analyze results {r, echo=FALSE, results='hide',message=FALSE} simout=readRDS(\"dynamAedes_albo_ws_dayintro_121_end486_niters10_neggs500.RDS\") first explore model output structure: simout object nested list. first level corresponds number model iterations second level corresponds simulated days. inspect first iteration, observe model computed 366 days, specified object endr. third level corresponds amount individuals stage (rows). inspect 1st 50th day within first iteration, obtain matrix can now use auxiliary functions model analyze results.","code":"print(it) print(length(simout)) length(simout[[1]]) dim(simout[[1]][[1]]) simout[[1]][[1]] simout[[1]][[50]]"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"derive-probability-of-a-successfull-introduction-at-the-end-of-the-simulated-period","dir":"","previous_headings":"Format the simulated input datasets and run the model","what":"Derive probability of a successfull introduction at the end of the simulated period","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"First, can retrieve probability successful introduction, computed proportion model iterations resulted viable mosquito population given date given life stage. {r, eval=FALSE, echo=TRUE} rbind.data.frame(psi(input_sim = simout, eval_date = 300, stage = 0),                  psi(input_sim = simout, eval_date = 340, stage = 1),                  psi(input_sim = simout, eval_date = 300, stage = 2),                  psi(input_sim = simout, eval_date = 300, stage = 3))","code":""},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"derive-abundance-95-ci-for-each-life-stage-and-in-each-day","dir":"","previous_headings":"Format the simulated input datasets and run the model","what":"Derive abundance 95% CI for each life stage and in each day","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"can now compute interquantile range abundance simulated population using function adci. ```{r, eval=FALSE, echo=TRUE} dd <- max(sapply(simout, function(x) length(x)))#retrieve maximum number simulated days egg<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=1)) juv<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=2)) ad<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=3)) eggd<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=4)) egg$myStage=\"Egg\" egg$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) juv$myStage=\"Juvenile\" juv$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) ad$myStage=\"Adult\" ad$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) eggd$myStage=\"Diapausing egg\" eggd$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) outdf=bind_rows(egg, juv, ad, eggd) %>% as_tibble() outdf %>% mutate(myStage=factor(myStage, levels= c(“Egg”, “Diapausing egg”, “Juvenile”, “Adult”))) %>% ggplot( aes(y=(50%),x=Date, group=factor(myStage),col=factor(myStage))) + ggtitle(“Ae. albopictus Interquantile range abundance”)+ geom_line(size=1.2)+ geom_ribbon(aes(ymin=25%,ymax=(75%),fill=factor(myStage)), col=“white”, alpha=0.2, outline.type=“full”)+ labs(x=“Date”, y=“Interquantile range abundance”, col=“Stage”, fill=“Stage”)+ facet_wrap(~myStage, scales = “free”)+ theme_light()+ theme(legend.pos=“bottom”, text = element_text(size=14) , strip.text = element_text(face = “italic”)) add spatial pattern lattice area. spatial pattern used later add spatial correllation (SAC) temperature time series. spatial autocorrelated pattern obtained using semivariogram model defined sill (value semivarion attains range) range (distance 0 spatial correlation) predicting semivariogram model lattice grid using unconditional Gaussian simulation. {r, message=FALSE} varioMod <- vgm(psill=0.005, range=100, model='Exp') # psill = partial sill = (sill-nugget) # Set additional variable simple kriging zDummy <- gstat(formula=z~1,                  locations = ~x+y,                  dummy=TRUE,                 beta=1,                  model=varioMod,                  nmax=1) # Generate randomly autocorrelated predictor data field set.seed(123) xyz <- predict(zDummy, newdata=xy, nsim=1) generate spatially autocorrelated raster adding SA variable (*xyz$sim1*) RasterLayer object. autocorrelated surface example represent distribution vegetation cover urban landscape. ```{r} utm32N <- \"+proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs\" r <- raster(nrow=40, ncol=40, crs=utm32N, ext=extent(0,10000, 0,10000)) values(r)=xyz$sim1 plot(r) df <- data.frame(“id”=1:nrow(xyz), coordinates(r)) bbox <- (extent(r), “SpatialPolygons”)","code":"# Local scale model The local scale allows the model to account for both active and passive dispersal of the mosquitoes. With this setting, the model requires three input datasets: a numerical matrix with temperatures in Celsius defined in space and time (space in the rows, time in the columns), a two-column numerical matrix reporting the coordinates (in meters) of each space-unit (cell) and a numerical *distance matrix* which reports the distance in meters between the cells connected through a road network. For the purpose of this tutorial, we will use the following simulated datasets:    1. A 10 km lattice grid with 250 m cell size;    2. A 2-year long spatially and temporally correlated temperature time series;    3. A matrix of distances between cells connected through a simulated road network;   ## Prepare input data ### Create lattice arena First, we define the physical space where the introduction of our mosquitoes will happen.  We define a squared lattice arena having 10 km side and 250 m resolution (40 colums and 40 rows, 1600 total cells).  ```{r} gridDim <- 40 # 10000m/250 m = 40 columns and rows xy <- expand.grid(x=1:gridDim, y=1:gridDim)"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"store-parameters-for-autocorrelation","dir":"","previous_headings":"","what":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"autocorr_factor <- values(r) comparison distribution initial temperature time series autocorrelated temperature surface","code":"### Simulate temperature data with seasonal trend We take advantage of the temperature dataset simulated for the punctual scale modelling exercise. We can then \"expand onto space\" the temperature time series by multiplying it with the autocorrelated surface simulated above.  ```{r} mat <- mclapply(1:ncell(r), function(x) {     d_t <- sim_temp[[1]]$x*autocorr_factor[[x]]     return(d_t) },mc.cores=1) #mc.cores=1 in Windows OS, which does not support mclapply function  mat <- do.call(rbind,mat) par(mfrow=c(2,1)) hist(mat, xlab=\"Temperature (°C)\", main=\"Histogram of simulated temperatures with spatial autocorrelation\") hist(sim_temp[[1]]$x, xlab=\"Temperature (°C)\", main=\"Histogram of simulated temperatures\", col=\"red\") par(mfrow=c(1,1))  # Format temperature data names(mat) <- paste0(\"d_\", 1:ndays) df_temp <- cbind(df, mat)"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"simulate-an-arbitrary-road-segment-for-medium-range-dispersal","dir":"","previous_headings":"","what":"Simulate an arbitrary road segment for medium-range dispersal","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"model considered possiblity medium-range passive dispersal. Thus, simulate arbitrary road segment along adult mosquitoes can disperse passively (.e., thorugh car traffic). defining road segment add “buffer” 100 m around road segment. Adult mosquitoes reach develop cells comprised 100 m buffer around roads able undergo passive dispersal. Next, derive distance matrix cells comprised spatial buffer along road network. First, select cells. ```{r, message=FALSE} df_sp=df coordinates(df_sp)=~x+y df_sp=raster::intersect(df_sp,buff)","code":"set.seed(123) pts <- spsample(bbox, 5, type=\"random\") roads <- spLines(pts)  # Check simulated segment raster::plot(r) raster::plot(roads, add=T) buff <- buffer(roads, width=100) crs(buff) <- crs(r) # Check grid, road segment and buffer raster::plot(r) raster::plot(buff, add=T) raster::plot(roads, add=T, col=\"red\")"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"check-selected-cells","dir":"","previous_headings":"","what":"Check selected cells","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"raster::plot(r) raster::plot(buff, add=T) raster::plot(df_sp, add=T, col=“red”)","code":"Then, we compute the Euclidean distance between each selected cell. ```{r} dist_matrix <- as.matrix(dist(coordinates(df_sp)))"},{"path":[]},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"model-settings-1","dir":"","previous_headings":"","what":"Model settings","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"Float numbers temperature matrix slow computational speed, thus first multiply 1000 transform integer numbers. can now define two-column matrix coordinates identify cell lattice grid. model requirement, distance matrix must column names equal row names. Moreover, distances distance matrix must rounded thousands. now left model variables need defined.","code":"w <- sapply(df_temp[,-c(1:3)], function(x) as.integer(x*1000)) cc <- df_temp[,c(\"x\",\"y\")] colnames(dist_matrix) <- row.names(dist_matrix) dist_matrix <- apply(dist_matrix,2,function(x) round(x/1000,1)*1000)   # An histogram showing the distribution of distances of cells along the road network hist(dist_matrix, xlab=\"Distance (meters)\") ## Define cells into which introduce propagules on day 1 intro.vector <- sample(as.numeric(row.names(dist_matrix)),1) ## Define the day of introduction (day 1) str = 121 ## Define the end-day of life cycle endr = 121+(365*2) ## Define the number of eggs to be introduced ie = 500 ## Define the number of model iterations it = 10 # The higher the number of simulation the better ## Define the number of liters for the larval density-dependent mortality habitat_liters=1 #Define latitude and longitude for the diapause process myLat=42 myLon=7 ##Define average trip distance  myCountry=\"fra\" ## Define the number of parallel processes (for sequential itarations set nc=1) cl = 5 ## Set output name for the *.RDS output will be saved outname= paste0(\"dynamAedes_albo_lc_dayintro_\",str,\"_end\",endr,\"_niters\",it,\"_neggs\",ie)"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"run-the-model-1","dir":"","previous_headings":"Model settings","what":"Run the model","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"Running model takes around 15 minutes settings specified example. {r, eval=FALSE, echo=TRUE} simout=dynamAedes(species=\"albopictus\",             scale=\"lc\",               ihwv=habitat_liters,               temps.matrix=w,               cells.coords=cc,             road.dist.matrix=dist_matrix,             intro.cells=intro.vector,             startd=str,              endd=endr,               n.clusters=cl,              iter=,               intro.eggs=ie,               compressed.output=TRUE,              lat=myLat,              long=myLon,              country=myCountry,             suffix=outname,              verbose = FALSE) ## Analyze results {r, echo=FALSE, results='hide',message=FALSE} simout=readRDS(\"dynamAedes_albo_lc_dayintro_121_end851_niters10_neggs500.RDS\") first explore model output structure: simout object nested list. first level corresponds number model iterations second level corresponds simulated days. inspect first iteration, observe model computed 366 days, specified object endr. third level corresponds amount individuals stage (rows) within grid cell landscape (columns). inspect first day within first iteration, obtain matrix can now use auxiliary functions model analyze results.","code":"print(it) print(length(simout)) length(simout[[1]]) dim(simout[[1]][[1]])"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"derive-probability-of-a-successfull-introduction-at-the-end-of-the-simulated-period-1","dir":"","previous_headings":"Model settings","what":"Derive probability of a successfull introduction at the end of the simulated period","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"First, can retrieve probability successful introduction, computed proportion model iterations resulted viable mosquito population given date given life stage. can also get spatial output, using function psi_sp, require additional input matrix pixels coordinates, b local scale, output double interpretation: pixel psi=0 can pixel simulations resulted existinsions species arrived yet dispersal.","code":"rbind.data.frame(psi(input_sim = simout, eval_date = 300, stage = 0),                  psi(input_sim = simout, eval_date = 700, stage = 1),                  psi(input_sim = simout, eval_date = 700, stage = 2),                  psi(input_sim = simout, eval_date = 700, stage = 3)) plot(psi_sp(coords = cc, input_sim = simout, eval_date = 600, n.clusters=cl))"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"derive-abundance-95-ci-for-each-life-stage-and-in-each-day-1","dir":"","previous_headings":"Model settings","what":"Derive abundance 95% CI for each life stage and in each day","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"can now compute interquantile range abundance simulated population whole landscape using function adci whole landscape. ```{r, eval=FALSE, echo=TRUE} dd <- max(sapply(simout, function(x) length(x)))#retrieve maximum number simulated days egg<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=1)) juv<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=2)) ad<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=3)) eggd<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=4)) egg$myStage=\"Egg\" egg$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) juv$myStage=\"Juvenile\" juv$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) ad$myStage=\"Adult\" ad$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) eggd$myStage=\"Diapausing egg\" eggd$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) outdf=bind_rows(egg, juv, ad, eggd) %>% as_tibble() outdf %>% mutate(myStage=factor(myStage, levels= c(“Egg”, “Diapausing egg”, “Juvenile”, “Adult”))) %>% ggplot( aes(y=log1p(50%),x=Date, group=factor(myStage),col=factor(myStage))) + ggtitle(“Ae. albopictus Interquantile range abundance”)+ geom_line(size=1.2)+ geom_ribbon(aes(ymin=log1p(25%),ymax=log1p(75%),fill=factor(myStage)), col=“white”, alpha=0.2, outline.type=“full”)+ labs(x=“Date”, y=“Interquantile range abundance (Log10)”, col=“Stage”, fill=“Stage”)+ facet_wrap(~myStage, scales = “free”)+ theme_light()+ theme(legend.pos=“bottom”, text = element_text(size=14) , strip.text = element_text(face = “italic”)) Note small number mosquitoes present pixels, lower quantiles (e.g., 1st 2nd quartiles) zero.","code":"We can also have a spatial output of the estimated interquantile range abundance of a given life stage using the function *adci_sp* just specifiying the pixels coordinates.   ```{r} r=adci_sp(simout, coords=cc, eval_date=700, breaks=c(0.25,0.50,0.75), stage=3) plot(r)"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"number-of-invaded-cells","dir":"","previous_headings":"Model settings","what":"Number of invaded cells","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"Compute summary number invaded cells model iterations","code":"x=icci(simout, eval_date=700, breaks=c(0.25,0.50,0.75)) x"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"estimates-of-mosquito-dispersal-spread-in-km2-","dir":"","previous_headings":"Model settings","what":"Estimates of mosquito dispersal spread (in km2 )","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"Estimates mosquito dispersal spread (km2 ) simulated mosquito populations scale = “lc”","code":"x=dici(simout, coords=cc, eval_date=365, breaks=c(0.25,0.50,0.75), space=TRUE) plot(x)"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"regional-scale-model","dir":"","previous_headings":"","what":"Regional scale model","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"Essentialy, regional scale model run punctual model within grid cell landscape, without accounting active passive dispersal mosquitoes. setting, model requires two input datasets: numerical matrix temperatures Celsius defined space time (space rows, time columns), two-column numerical matrix reporting coordinates (meters) space-unit (cell). purpose tutorial, use following simulated datasets: 10 km lattice grid 250 m cell size; 2-year long spatially temporally correlated temperature time series;","code":""},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"model-settings-2","dir":"","previous_headings":"","what":"Model settings","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"take advantage spatial temperature dataset simulated local scale modelling exercise. Float numbers temperature matrix slow computational speed, thus first multiply 1000 transform integer numbers. can now define two-column matrix coordinates identify cell lattice grid. now left model variables need defined.","code":"w <- sapply(df_temp[,-c(1:3)], function(x) as.integer(x*1000)) cc <- df_temp[,c(\"x\",\"y\")] ## Define the day of introduction (day 1) str = 121 ## Define the end-day of life cycle endr = 121+365 ## Define the number of eggs to be introduced ie = 500 ## Define the number of model iterations it = 10 # The higher the number of simulation the better ## Define the number of liters for the larval density-dependent mortality habitat_liters=1 #Define latitude and longitude for the diapause process myLat=42 myLon=7 ## Define the number of parallel processes (for sequential iterations set nc=1) cl = 5 ## Set output name for the *.RDS output will be saved outname= paste0(\"dynamAedes_albo_rg_dayintro_\",str,\"_end\",endr,\"_niters\",it,\"_neggs\",ie)"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"run-the-model-2","dir":"","previous_headings":"Model settings","what":"Run the model","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"Running model takes around 10 minutes settings specified example. {r, eval=FALSE, echo=TRUE} simout=dynamAedes(species=\"albopictus\",              scale=\"rg\",               ihwv=habitat_liters,               temps.matrix=w,               cells.coords=cc,             startd=str,              endd=endr,               n.clusters=cl,              iter=,               intro.eggs=ie,               compressed.output=TRUE,              lat=myLat,              long=myLon,              suffix=outname,              verbose = FALSE) ## Analyze results {r, echo=FALSE, results='hide',message=FALSE} simout=readRDS(\"dynamAedes_albo_rg_dayintro_121_end486_niters10_neggs500.RDS\") first explore model output structure: simout object nested list. first level corresponds number model iterations second level corresponds simulated days. inspect first iteration, observe model computed 366 days, specified object endr. third level corresponds amount individuals stage (rows) within grid cell landscape (columns). inspect first day within first iteration, obtain matrix can now use auxiliary functions model analyze results.","code":"print(it) print(length(simout)) length(simout[[1]]) dim(simout[[1]][[1]])"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"derive-probability-of-a-successfull-introduction-at-the-end-of-the-simulated-period-2","dir":"","previous_headings":"Model settings","what":"Derive probability of a successfull introduction at the end of the simulated period","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"First, can retrieve probability successful introduction, computed proportion model iterations resulted viable mosquito population given date given life stage. can also get spatial output, using function psi_sp, require additional input matrix pixels coordinates, b","code":"rbind.data.frame(psi(input_sim = simout, eval_date = 365, stage = 0),                  psi(input_sim = simout, eval_date = 365, stage = 1),                  psi(input_sim = simout, eval_date = 365, stage = 2),                  psi(input_sim = simout, eval_date = 365, stage = 3)) plot(psi_sp(coords = cc, input_sim = simout, eval_date = 100, np=cl))"},{"path":"https://mattmar.github.io/dynamAedes/index.html","id":"derive-abundance-95-ci-for-each-life-stage-and-in-each-day-2","dir":"","previous_headings":"Model settings","what":"Derive abundance 95% CI for each life stage and in each day","title":"A Unified Mechanistic Model for the Population Dynamics of Invasive Aedes Mosquitoes","text":"can now compute interquantile range abundance simulated population using function adci whole landscape. ```{r, eval=FALSE, echo=TRUE} dd <- max(sapply(simout, function(x) length(x)))#retrieve maximum number simulated days egg<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=1)) juv<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=2)) ad<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=3)) eggd<-.data.frame(adci(simout, eval_date=1:dd, breaks=c(0.25,0.50,0.75), st=4)) egg$myStage=\"Egg\" egg$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) juv$myStage=\"Juvenile\" juv$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) ad$myStage=\"Adult\" ad$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) eggd$myStage=\"Diapausing egg\" eggd$Date=seq.Date(sim_temp[[1]]date[str], simtemp[[1]]date[endr], =“day”) outdf=bind_rows(egg, juv, ad, eggd) %>% as_tibble() outdf %>% mutate(myStage=factor(myStage, levels= c(“Egg”, “Diapausing egg”, “Juvenile”, “Adult”))) %>% ggplot( aes(y=(50%),x=Date, group=factor(myStage),col=factor(myStage))) + ggtitle(“Ae. albopictus Interquantile range abundance”)+ geom_line(size=1.2)+ geom_ribbon(aes(ymin=25%,ymax=(75%),fill=factor(myStage)), col=“white”, alpha=0.2, outline.type=“full”)+ labs(x=“Date”, y=“Interquantile range abundance”, col=“Stage”, fill=“Stage”)+ facet_wrap(~myStage, scales = “free”)+ theme_light()+ theme(legend.pos=“bottom”, text = element_text(size=14) , strip.text = element_text(face = “italic”)) ```","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/adci.html","id":null,"dir":"Reference","previous_headings":"","what":"Summaries of mosquito abundance. — adci","title":"Summaries of mosquito abundance. — adci","text":"Summaries mosquito abundance life stage day.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/adci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summaries of mosquito abundance. — adci","text":"","code":"adci(   input_sim = NA,   stage = 1,   n.clusters = 1,   eval_date = 0,   breaks = c(0.25, 0.5, 0.75) )"},{"path":"https://mattmar.github.io/dynamAedes/reference/adci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summaries of mosquito abundance. — adci","text":"input_sim matrix. dynamAedes compressed output matrix. stage positive integer. 0 (), 1 (egg), 2 (juvenile), 3 (adult), 4 (diapausing egg). n.clusters positive integer. Define number parallel processes. eval_date positive integer. Define day successful introduction evaluation, referring column number temperature matrix used inform model. breaks numeric vector. Quantile breaks, default first, second third quantile: c(0.25,0.5,0.75).","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/adci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summaries of mosquito abundance. — adci","text":"Returns table summary mosquito abundance per life stage (substage compressed.output=FALSE dynamAedes function) day.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/adci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summaries of mosquito abundance. — adci","text":"Matteo Marcantonio marcantoniomatteo@gmail.com, Daniele Da Re daniele.dare@uclouvain.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/adci_sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Summaries of mosquito abundance (spatial) — adci_sp","title":"Summaries of mosquito abundance (spatial) — adci_sp","text":"Summaries mosquito abundance life stage day.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/adci_sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summaries of mosquito abundance (spatial) — adci_sp","text":"","code":"adci_sp(   input_sim = NULL,   coords = NULL,   eval_date = NULL,   stage = 1,   breaks = c(0.25, 0.5, 0.75) )"},{"path":"https://mattmar.github.io/dynamAedes/reference/adci_sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summaries of mosquito abundance (spatial) — adci_sp","text":"input_sim matrix. dynamAedes compressed output matrix coords matrix. matrix reporting spatial coordinates temperature observations. eval_date positive integer. Define day successful introduction evaluation, referring column number temperature matrix used inform model. stage positive integer. 0 (), 1 (egg), 2 (juvenile), 3 (adult), 4 (diapausing egg). breaks numeric vector. Quantile breaks, default first, second third quantile: c(0.25,0.5,0.75).","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/adci_sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summaries of mosquito abundance (spatial) — adci_sp","text":"Returns raster summary mosquito abundance life stage day.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/adci_sp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summaries of mosquito abundance (spatial) — adci_sp","text":"Matteo Marcantonio marcantoniomatteo@gmail.com, Daniele Da Re daniele.dare@uclouvain.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/dici.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate of of mosquito dispersal — dici","title":"Estimate of of mosquito dispersal — dici","text":"Estimates dispersal (km^2) simulated mosquito population scale = \"lc\".","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/dici.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate of of mosquito dispersal — dici","text":"","code":"dici(   input_sim = NULL,   coords = NULL,   eval_date = NULL,   breaks = c(0.25, 0.5, 0.75),   space = FALSE )"},{"path":"https://mattmar.github.io/dynamAedes/reference/dici.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate of of mosquito dispersal — dici","text":"input_sim matrix. dynamAedes compressed output matrix (compressed=TRUE). coords matrix. matrix reporting spatial coordinates temperature observations. eval_date numeric. Define day evaluation; refers column number input temperature matrix. breaks numeric vector. Quantile breaks, default interquartile range: c(0.25,0.5,0.75). space See details.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/dici.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate of of mosquito dispersal — dici","text":"space=FALSE returns dataframe quantiles distribution dispersal distances; space=TRUE (experimental) returns invaded cells last day model simulations iterations.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/dici.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate of of mosquito dispersal — dici","text":"Matteo Marcantonio marcantoniomatteo@gmail.com, Daniele Da Re daniele.dare@uclouvain.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/dynamAedes.html","id":null,"dir":"Reference","previous_headings":"","what":"Life cycle simulation of Aedes mosquitoes — dynamAedes","title":"Life cycle simulation of Aedes mosquitoes — dynamAedes","text":"Function simulate population dynamics Aedes mosquitoes","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/dynamAedes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Life cycle simulation of Aedes mosquitoes — dynamAedes","text":"","code":"dynamAedes(   species = \"aegypti\",   intro.eggs = 0,   intro.deggs = 0,   intro.adults = 0,   intro.juveniles = 0,   scale = \"ws\",   intro.cells = NULL,   ihwv = 1,   temps.matrix = NULL,   startd = 1,   endd = 10,   cells.coords = NULL,   coords.proj4 = NA,   lat = NA,   long = NA,   road.dist.matrix = NULL,   avgpdisp = NA,   iter = 1,   n.clusters = 1,   cluster.type = \"PSOCK\",   sparse.output = FALSE,   compressed.output = TRUE,   suffix = NA,   cellsize = 250,   maxadisp = 600,   dispbins = 10,   verbose = FALSE,   seeding = FALSE )"},{"path":"https://mattmar.github.io/dynamAedes/reference/dynamAedes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Life cycle simulation of Aedes mosquitoes — dynamAedes","text":"species character. Select species model: \"aegypti\", \"albopictus\", \"japonicus\", \"koreicus\". Default species = \"aegypti\". intro.eggs positive integer. number introduced eggs, default intro.eggs = 0. intro.deggs positive integer. number introduced diapause eggs, default intro.deggs = 100. intro.adults positive integer. number introduced adults, default intro.adults = 0. intro.juveniles positive integer. number introduced juveniles, default intro.juveniles = 0. scale character. Define model spatial scale: punctual/weather station \"ws\", local \"lc\", regional \"rg\". Active passive dispersal enabled scale = \"lc\". Default scale = \"ws\". intro.cells positive integer. One cells (id) introduce population local (\"lc\") scale. intro.cells=NULL, random cell used introduction; intro.cells vector cell ids cell drawn random vector (repetition) introduction model iteration. ihwv positive integer. Larval-habitat water volume, define volume (L) water habitat presents spatial unit (parametrised data retrieved doi:10.1111/1365-2664.12620 ). Default lhwv = 1. temps.matrix matrix. matrix daily (average) temperatures (degrees Celsius degree x 1000) used fit life cycle rates. matrix must organised daily temperature observations columns geographic position -grid cell rows. Importantly, first column must match startd date. startd Character  date (ISO format \"%Y-%m-%d\"). Date start simulations. endd Character  date (ISO format \"%Y-%m-%d\"). Date end simulation. can NA; derived using number columns temps.matrix. cells.coords matrix. matrix reporting spatial coordinates temperature observations. coords.proj4 string. Proj4 string cell coordinates used calculation photoperiod. lat numeric. Latitude value area interested used derive photoperiod (thus diapause eggs allocation function). long numeric. Longitude value area interested used derive photoperiod (thus diapause eggs allocation function) road.dist.matrix matrix. scale = \"lc\", defines matrix containing distances (meters) grid cells intersecting road network mosquito passive dispersal process. avgpdisp optional. scale = \"lc\", define average car trip distance mosquito passive dispersal process. value can set users (positive numeric), estimates made Pasaoglu et al. 2012) following European countries: France \"fra\", Germany \"deu\", Italy \"ita\", Poland \"pol\", Spain \"esp\" United Kingdom \"uk\". average passive dispersal distance must smaller maximum distance road.dist.matrix. iter positive integer. Define number model iterations. n.clusters positive integer. Defines number parallel processes. cluster.type character. Defines type cluster, default \"PSOCK\". sparse.output logical. output matrix optimised sparse-matrix algebra (e.g. zeros indexed). compressed.output logical. Default TRUE, FALSE provide abundance model's subcompartiment; FALSE abundances summed per compartment. suffix character. Model output suffix output RDS. cellsize (positive integer. scale = \"lc\", defines minimal distance active dispersal kernel match spatial resolution temps.matrix avoid inconsistencies. Default cellsize = 250 maxadisp positive integer. scale = \"lc\", defines maximum daily dispersal, default maxadisp = 600. dispbins positive integer. scale = \"lc\", defines resolution dispersal kernel, default dispbins = 10. verbose logical. TRUE overview population dynamics printed console. seeding logical, default FALSE, seeding=TRUE fixed seed applied result reproducibility.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/dynamAedes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Life cycle simulation of Aedes mosquitoes — dynamAedes","text":"Matrix list matrices containing, iteration, number individuals life stage per day (grid cell study area scale=\"lc\" \"rg\"). argument compressed.output=FALSE (default TRUE), model returns daily number individuals life stage sub-compartment.","code":""},{"path":[]},{"path":"https://mattmar.github.io/dynamAedes/reference/dynamAedes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Life cycle simulation of Aedes mosquitoes — dynamAedes","text":"Matteo Marcantonio marcantoniomatteo@gmail.com, Daniele Da Re daniele.dare@uclouvain.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/dynamAedes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Life cycle simulation of Aedes mosquitoes — dynamAedes","text":"","code":"## Run dynmAedes at local scale for 5 days # Make a toy temperature time series if (FALSE) { w <- matrix(seq(20,25,length.out=5),ncol=5)*1000 # Run the model   dynamAedes(   species=\"koreicus\",    scale=\"ws\",   intro.eggs=10,    ihwv=2,    temps.matrix=w,    startd=2,    endd=5,   lat=42,   long=8,   n.clusters=1,    iter=1,   compressed.output=TRUE) }"},{"path":"https://mattmar.github.io/dynamAedes/reference/get_rates_spatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportion of successful introductions — get_rates_spatial","title":"Proportion of successful introductions — get_rates_spatial","text":"Compute proportion \"successful\" introductions.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/get_rates_spatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportion of successful introductions — get_rates_spatial","text":"","code":"get_rates_spatial(   coords = NULL,   temps.matrix = NULL,   species = \"aegypti\",   rate_fun = NULL,   spatial = FALSE,   rate = TRUE,   n.clusters = 1 )"},{"path":"https://mattmar.github.io/dynamAedes/reference/get_rates_spatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportion of successful introductions — get_rates_spatial","text":"coords matrix (optional). matrix reporting spatial coordinates temperature observations. temps.matrix matrix, vector. matrix vector daily average temperature (Celsius degree /1000) used fit life cycle rates. matrix must organised daily temperature observations columns geographic position -grid cell rows. species character. Select species model: \"aegypti\", \"albopictus\", \"japonicus\", \"koreicus\". Default species = \"aegypti\". rate_fun character. Define one temperature-dependent functions model, e.g. \".e.hatch.rate\". spatial logical. Get raster output. Default FALSE rate logical. Returns daily rate. Default TRUE n.clusters postive integer. Define number parallel processes.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/get_rates_spatial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportion of successful introductions — get_rates_spatial","text":"Returns estimated value given temperature-dependent function. spatial = TRUE, return raster.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/get_rates_spatial.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Proportion of successful introductions — get_rates_spatial","text":"Matteo Marcantonio marcantoniomatteo@gmail.com, Daniele Da Re daniele.dare@uclouvain.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/icci.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of invaded cells — icci","title":"Number of invaded cells — icci","text":"Compute summary number invaded cells model iterations","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/icci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of invaded cells — icci","text":"","code":"icci(input_sim = NA, eval_date = 0, breaks = c(0.25, 0.5, 0.75))"},{"path":"https://mattmar.github.io/dynamAedes/reference/icci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of invaded cells — icci","text":"input_sim matrix. dynamAedes compressed output matrix (compressed=TRUE). eval_date numeric. Define day evaluation; refers column number input temperature matrix. breaks numeric vector. Quantile breaks, default interquartile range: c(0.25,0.5,0.75).","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/icci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of invaded cells — icci","text":"icci returns quantiles distribution invaded cell number specified. output interpreted according model spatial scale (.e. scale='rg' scale='lc' give different interpretation).","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/icci.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Number of invaded cells — icci","text":"Matteo Marcantonio marcantoniomatteo@gmail.com, Daniele Da Re daniele.dare@uclouvain.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/psi.html","id":null,"dir":"Reference","previous_headings":"","what":"Proportion of successful introductions — psi","title":"Proportion of successful introductions — psi","text":"Compute proportion \"successful\" introductions.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/psi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Proportion of successful introductions — psi","text":"","code":"psi(input_sim = NULL, eval_date = NULL)"},{"path":"https://mattmar.github.io/dynamAedes/reference/psi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Proportion of successful introductions — psi","text":"input_sim matrix. dynamAedes compressed output matrix (compressed=TRUE). eval_date positive integer. define day(s) calculate proportion successful introductions match column number temperature matrix used inform model.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/psi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Proportion of successful introductions — psi","text":"psi returns proportion model iterations resulted viable mosquito population (defined : iterations least one individual alive life stage) given date.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/psi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Proportion of successful introductions — psi","text":"Matteo Marcantonio marcantoniomatteo@gmail.com, Daniele Da Re daniele.dare@uclouvain.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/psi_sp.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability of successful introduction (spatial) — psi_sp","title":"Probability of successful introduction (spatial) — psi_sp","text":"Compute proportion successful introductions per cell grid.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/psi_sp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability of successful introduction (spatial) — psi_sp","text":"","code":"psi_sp(input_sim = NULL, coords = NULL, eval_date = NULL, n.clusters = 1)"},{"path":"https://mattmar.github.io/dynamAedes/reference/psi_sp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability of successful introduction (spatial) — psi_sp","text":"input_sim matrix. dynamAedes compressed output matrix (compressed=TRUE). coords matrix. matrix reporting spatial coordinates temperature observations. eval_date positive integer. Define day(s) calculate proportion successful introductions match column number temperature matrix used inform model. n.clusters positive integer. Define number parallel processes.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/psi_sp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability of successful introduction (spatial) — psi_sp","text":"psi_sp returns raster proportion model iterations resulted viable mosquito population given date given life stage cell grid.","code":""},{"path":"https://mattmar.github.io/dynamAedes/reference/psi_sp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Probability of successful introduction (spatial) — psi_sp","text":"Matteo Marcantonio marcantoniomatteo@gmail.com, Daniele Da Re daniele.dare@uclouvain.","code":""},{"path":"https://mattmar.github.io/dynamAedes/news/index.html","id":"dynamaedes-21","dir":"Changelog","previous_headings":"","what":"dynamAedes 2.1","title":"dynamAedes 2.1","text":"regional scale now diapause derived pixel pixel using photoperiod input coordinates. can now introduce diapause eggs using dynamAedes argument “intro.degg”","code":""},{"path":"https://mattmar.github.io/dynamAedes/news/index.html","id":"dynamaedes-202","dir":"Changelog","previous_headings":"","what":"dynamAedes 2.0.2","title":"dynamAedes 2.0.2","text":"CRAN release: 2022-01-17 Minor bug fix idci icci functions Change option name passive dispersal; option use numeric vector average passive dispersal Reshape vignette (simplified) packaging Change vignette builder knitr Add initial test reproducibility Add code example dynamAedes","code":""},{"path":"https://mattmar.github.io/dynamAedes/news/index.html","id":"dynamaedes-201","dir":"Changelog","previous_headings":"","what":"dynamAedes 2.0.1","title":"dynamAedes 2.0.1","text":"functions reshaped publication Physiological rates updates Vignette updated","code":""},{"path":"https://mattmar.github.io/dynamAedes/news/index.html","id":"dynamaedes-200","dir":"Changelog","previous_headings":"","what":"dynamAedes 2.0.0","title":"dynamAedes 2.0.0","text":"Enhanced physiological rates koreicus/japonicus Proportion diapausing eggs dependent photoperiod Diapausing eggs fixed survival Diapausing eggs laid photoperiod decreasing hatch photoperiod rising. Increased minimum duration egg juvenile stages match species biology","code":""},{"path":"https://mattmar.github.io/dynamAedes/news/index.html","id":"dynamaedes-101","dir":"Changelog","previous_headings":"","what":"dynamAedes 1.0.1","title":"dynamAedes 1.0.1","text":"Functions process output now integrated Adding dispersal kernel albopictus README drafted Package now compiles CRAN standards","code":""},{"path":"https://mattmar.github.io/dynamAedes/news/index.html","id":"dynamaedes-100","dir":"Changelog","previous_headings":"","what":"dynamAedes 1.0.0","title":"dynamAedes 1.0.0","text":"First release includes functions : * Simulate life cycle","code":""}]
